{%- assign settings_filter_style = settings.filter_style -%}
{%- assign btn_reset_view_suffix = '' -%}
{%- assign cross_tags = section.settings.cross_tags -%}
<script>tag_group = [];</script>
<div id="filterRow" class="{% if section.settings.border_off  %}block-border-off{% endif %} {% if settings_filter_style == 'visible_horizontal' or settings_filter_style == 'hidden_horizontal' %}filter-row-content{% else %}filter-col-content{% endif %} filter-mobile-content">
    <div {% if settings_filter_style == 'visible_horizontal' or settings_filter_style == 'hidden_horizontal' %}class="row"{% endif %}>
    <div class="sidebar-block d-filter-mobile">
        <h3 class="mb-1">{{ 'collections.sorting.title' | t }}</h3>
        <div class="select-wrapper select-wrapper-xs">
            {%- assign sort_by = collection.sort_by | default: collection.default_sort_by -%}
            <select class="form-control" name="sort_by" data-select-filter>
                {%- for option in collection.sort_options -%}
                    <option value="{{ option.value }}" {% if option.value == sort_by %}selected="selected"{% endif %}>{{ option.name }}</option>
                {%- endfor -%}
            </select>
        </div>
    </div>
    {%- if section.settings.categories != blank -%}
    <div class="sidebar-block filter-group-block {% if settings_filter_style == 'visible_horizontal' or settings_filter_style == 'hidden_horizontal' %}{{ section.settings.column_width }}{% endif %} open">
        <div class="sidebar-block_title">
            <span>{{ linklists[section.settings.categories].title }}</span>
            <div class="toggle-arrow"><span></span><span></span></div>
        </div>
        <div class="sidebar-block_content">
            <ul class="category-list">
                {% for link in linklists[section.settings.categories].links %}
                    {% if link.url contains 'collection' %}
                        {% assign title = link.title | split:'::' %}
                        <li {% if link.active %}class="active"{% endif %}><a data-collection-render href="{{ link.url }}{{ btn_reset_view_suffix }}"  title="{{ title[0] }}" class="open">{{ title[0] }}
                                {%- if title[1] != blank -%}
                                    {%- assign col_handle = title[1] -%}
                                    &nbsp;<span>({{ collections[col_handle].products_count }})</span>
                                {%- endif -%}
                            </a>
                            {%- if title[2] != blank -%}
                                <div class="toggle-category js-toggle-category"><span><i class="icon-angle-down"></i></span></div>
                                {% assign list_handle = title[2] %}
                                <ul class="category-list">
                                    {% for link_1 in linklists[list_handle].links %}
                                        {% assign title = link_1.title | split:'::' %}
                                        <li {% if link_1.active %}class="active"{% endif %}><a data-collection-render href="{{ link_1.url }}{{ btn_reset_view_suffix }}"  title="{{ title[0]}}">{{ title[0]}}
                                                {%- if title[1] != blank -%}
                                                    {%- assign col_handle = title[1] -%}
                                                    &nbsp;<span>({{ collections[col_handle].products_count }})</span>
                                                {%- endif -%}
                                            </a></li>
                                    {% endfor %}
                                </ul>
                            {%- endif -%}
                        </li>
                    {% endif %}
                {% endfor %}
            </ul>
        </div>
    </div>
    {%- endif -%}
    {% assign current_tags_str = current_tags | downcase %}
    {% assign lan_item =  'theme.collection.item' | t %}
    {% assign lan_items = 'theme.collection.items' | t %}
    {%- if settings_filter_style == 'hidden_vertical_style_1' or settings_filter_style == 'visible_vertical' -%}
    {%- if section.settings.shopping_by -%}
    {% if current_tags.size > 0 %}
        <div class="sidebar-block filter-group-block open">
            <div class="sidebar-block_title">
                <span>{{ 'theme.collection.current_selection' | t }}</span>
                <div class="toggle-arrow"><span></span><span></span></div>
            </div>
            <div class="sidebar-block_content">
                <div class="selected-filters-wrap">
                    <ul class="selected-filters">
                        {% for tag in current_tags %}
                            <li>{{ tag | link_to_remove_tag: tag | replace:'href','data-collection-render href' }}</li>
                        {% endfor %}
                    </ul>
                    <div class="flex-wrap align-items-center d-none d-lg-flex">
                        <a href="{{ collection.url }}{{ btn_reset_view_suffix }}" class="clear-filters"  data-collection-render><i class="icon-recycle"></i><span>{{ 'theme.collection.reset' | t }}</span></a>
                        <div class="selected-filters-count ml-auto">{{ 'theme.collection.selected' | t }} <span>{{ collection.products_count }} {{ paginate.items | pluralize: lan_item, lan_items }}</span></div>
                    </div>
                </div>
            </div>
        </div>
    {% endif %}
    {%- endif -%}
    {%- endif -%}
    {% assign current_tags_str = current_tags | downcase %}
    {% if cross_tags %}
        {% assign all_collection_tags = collection.tags | downcase %}
    {% else %}
        {% assign all_collection_tags = collection.all_tags | downcase %}
    {% endif %}
    {% for block in section.blocks %}
        {% if block.settings.enable %}
            {% if block.type == 'group' %}
                {% assign block_settings_tags_downcase = block.settings.tags | downcase %}
                {% assign user_filter_tags = block.settings.tags | downcase | split:"," | uniq %}
                {% assign user_filter_tags_original = block.settings.tags | split:"," | uniq %}
                {% assign empty_flag = '1' %}
                {% for user_tag in user_filter_tags %}
                    {% assign tag_only_dawncase_real = user_tag | downcase | strip | split:'__' | first |  append:'"'| prepend:'"' %}
                    {% if all_collection_tags contains tag_only_dawncase_real %}
                        {% unless current_tags_str contains tag_only_dawncase_real %}
                        {% assign empty_flag = '0' %}
                        {% endunless %}
                    {% endif %}
                {% endfor %}

                <!--Check if the current tag from the current group-->
                {% assign current_tag_from_current_group = false %}
                {% assign current_tag_from_current_group_value = '' %}
                {% for user_tag in user_filter_tags %}
                    {% assign tag_only_dawncase = user_tag | downcase | strip | split:'__' | first %}
                    {% for tag in current_tags %}
                        {% assign tag_current_downcase = tag | downcase | append:'' %}
                        {% if tag_only_dawncase == tag_current_downcase %}
                            {% assign current_tag_from_current_group = true %}
                            {% assign current_tag_from_current_group_value = tag | handle %}
                        {% endif %}
                    {% endfor %}
                {% endfor %}
                <!--End-->
                {% if empty_flag == '0' %}
                    {%- assign settings_closed = block.settings.closed -%}
                    {%- assign prev_index = forloop.index | minus:2 -%}
                    {%- assign previous_merge_flag = section.blocks[prev_index].settings.merge -%}
                    {%- assign current_merge_flag = block.settings.merge -%}
                    {% capture sidebar_block_start %}<div class="sidebar-block {% if settings_filter_style == 'visible_horizontal' or settings_filter_style == 'hidden_horizontal' %}{{ block.settings.column_width }}{% endif %} {% if settings_closed %}collapsed{% else %}open{% endif %}  filter-group-{{ block.settings.title | strip_html | handle }}"> {% endcapture %}
                    {%- if cross_tags -%}
                        {{ sidebar_block_start }}
                    {%- else -%}
                        {%- if settings_filter_style == 'visible_horizontal' or settings_filter_style == 'hidden_horizontal' -%}
                            {%- unless previous_merge_flag -%}
                            {{ sidebar_block_start }}
                            {%- endunless -%}
                        {%- else -%}
                            {{ sidebar_block_start }}
                        {%- endif -%}
                    {%- endif -%}
                        <div class="sidebar-block_title">
                            <span>{{ block.settings.title }}</span>
                            <div class="toggle-arrow"><span></span><span></span></div>
                        </div>
                        <div class="sidebar-block_content">
                            {%- assign settings_two_cols = block.settings.two_cols -%}
                            <ul class="{{ block.settings.style }} {% if settings_two_cols %}two-column{% endif %}">
                                {% for user_tag in user_filter_tags_original %}
                                    {% assign tag_only_dawncase = user_tag | downcase | strip | split:'__' | first | append:'"'| prepend:'"' %}
                                    {% assign user_tag_value = user_tag | strip | split:'__' | first %}
                                    {% assign user_tag_title = user_tag | strip | split:'__' | last %}
                                    {% assign user_tag_value_dawncase = user_tag | dawncase | strip | split:'__' | first %}
                                    {% if all_collection_tags contains tag_only_dawncase %}
                                        {% assign flag_link_to_remove_tag = false %}
                                        {% if current_tags_str contains tag_only_dawncase %}
                                            {% capture user_tag_capture = %}{{ user_tag_value | link_to_remove_tag: user_tag_value_dawncase }}{% endcapture %}
                                            {% assign flag_link_to_remove_tag = true %}
                                        {% else %}
                                            {% capture user_tag_capture = %}{{ user_tag_value | link_to_add_tag: user_tag_value_dawncase }}{% endcapture %}
                                        {% endif %}
                                        {% assign user_tag_capture_href = user_tag_capture | split:'href="' | last | split:'"' | first %}
                                        {% assign user_tag_capture_title = user_tag_capture | split:'title="' | last | split:'"' | first %}
                                        {% unless flag_link_to_remove_tag %}
                                        {% if current_tag_from_current_group %}
                                            <!-- for replacing user_tag_capture_href -->
                                            {% assign user_tag_capture_href_array = user_tag_capture_href | split:'?' | first | split:'/' | last | split:'+' %}
                                            {% assign tags_part = '' %}
                                            {% if user_tag_capture_href_array.size > 1 %}
                                                {% for tag in user_tag_capture_href_array %}
                                                    {% unless tag == current_tag_from_current_group_value %}
                                                    {% assign tags_part = tags_part | append:tag %}
                                                    {% unless forloop.last %}
                                                    {% assign tags_part = tags_part | append:'+' %}
                                                    {% endunless %}
                                                    {% endunless %}
                                                {% endfor %}
                                            {% endif %}
                                            {% assign user_tag_capture_collection = user_tag_capture_href | split:'/collections/' | last | split:'/' | first %}
                                            {% assign user_tag_capture_href_first = '/collections/' | append:user_tag_capture_collection | append:'/' | append:tags_part %}
                                            {% assign user_tag_capture_href_last = user_tag_capture_href | split:'?' %}
                                            {% if user_tag_capture_href_last.size > 1 %}
                                                {% assign user_tag_capture_href_last = user_tag_capture_href_last | last | prepend:'?' %}
                                            {% else %}
                                                {% assign user_tag_capture_href_last = '' %}
                                            {% endif %}
                                            {% assign user_tag_capture_href = user_tag_capture_href_first | append:user_tag_capture_href_last %}
                                        {% endif %}
                                        {% endunless %}
                                    <li data-value="{{ user_tag_value | handle }}" {% if current_tags_str contains tag_only_dawncase %}class="active"{% endif %}>
                                        {% case block.settings.style %}
                                        {% when 'color-list' %}
                                        <a data-collection-render href="{{ user_tag_capture_href }}" title="{{ user_tag_capture_href }}" data-tooltip="{{ user_tag_title }}">
                                            <span class="value"><img src="{{ user_tag | handle | prepend:'color-' | append:'.png' | file_url }}" alt="{{ user_tag_title }}"></span>
                                            <span class="colorname">{{ user_tag_title }}</span>
                                        </a>
                                        {% when 'banners-list' %}
                                        <a data-collection-render href="{{ user_tag_capture_href }}" title="{{ user_tag_capture_title }}" style="background-image: url({{ user_tag_value | handle | prepend:'color-' | append:'.png' | file_url }})"><span>{{ user_tag_title }}</span></a>
                                    {% else %}
                                        <a data-collection-render href="{{ user_tag_capture_href }}" title="{{ user_tag_capture_title }}">{{ user_tag_title }}</a>
                                        {% endcase %}
                                        </li>
                                    {% endif %}
                                {% endfor %}
                            </ul>
                        </div>
                    {%- if cross_tags -%}
                    </div>
                    {%- else -%}
                        {%- if settings_filter_style == 'visible_horizontal' or settings_filter_style == 'hidden_horizontal' -%}
                                {%- unless current_merge_flag -%}
                                </div>
                                {%- endunless -%}
                            {%- else -%}
                                </div>
                            {%- endif -%}
                        {%- endif -%}
                    {%- endif -%}
            {% else %}
                {%- if settings_filter_style == 'hidden_vertical_style_1' or settings_filter_style == 'visible_vertical' -%}
                    {% assign banner = block.settings %}
                    {% render 'banner-item', banner: banner, id: block.id, gutters: 0.1, fontratio: 3.65 %}
                {%- endif -%}
            {% endif %}
        {% endif %}
    {% endfor %}
    </div>
    {%- if settings_filter_style == 'visible_horizontal' or settings_filter_style == 'hidden_horizontal' -%}
    <div class="sidebar-block-horizontal">
    {%- comment -%}
    {%- if section.settings.shopping_by -%}
    {% if current_tags.size > 0 %}
    <div class="sidebar-block_title">
        <span>{{ 'theme.collection.current_selection' | t }}</span>
    </div>
    <ul class="selected-filters">
        {% for tag in current_tags %}
            <li>{{ tag | link_to_remove_tag: tag | replace:'href','data-collection-render href' }}</li>
        {% endfor %}
    </ul>
    <a href="{{ collection.url }}{{ btn_reset_view_suffix }}" class="clear-filters"  data-collection-render><i class="icon-recycle"></i><span>{{ 'theme.collection.reset' | t }}</span></a>
    <div class="selected-filters-count">{{ 'theme.collection.selected' | t }} <span>{{ collection.products_count }} {{ paginate.items | pluralize: lan_item, lan_items }}</span></div>
    {%- endif -%}
    {%- endif -%}
    {%- endcomment -%}
    <a href="#" class="filter-row-close js-filter-btn">{{ 'theme.collection.close_filter' | t }}<i class="icon-close-bold"></i></a>
    </div>
    {%- endif -%}
</div>

{% schema %}
{
"name": "Sidebar (filter by tags)",
"settings": [
{
"type": "paragraph",
"content": "[Documentation](http://big-skins.com/foxic/manuals/#SetupSidebarFilter)"
},
{
"type": "header",
"content": "Settings"
},
{
"type": "link_list",
"id": "categories",
"label": "Categories"
},
{
"type": "select",
"id": "column_width",
"label": "Column Width",
"options": [
{ "value": "filter-row-col-12", "label": "1/8" },
{ "value": "filter-row-col-16", "label": "1/6" },
{ "value": "filter-row-col-25", "label": "1/4" },
{ "value": "filter-row-col-33", "label": "1/3" },
{ "value": "filter-row-col-auto", "label": "auto (takes up free space)" }
],
"default": "filter-row-col-25",
"info": "only for horizontal sidebar"
},
{
"type": "checkbox",
"id": "border_off",
"label": "Remove Divider Line",
"default": false
},
{
"type": "checkbox",
"id": "shopping_by",
"label": "Enable Shopping by Tag",
"default": true,
"info": "block shows checked filter items"
},
{
"type": "checkbox",
"id": "cross_tags",
"label": "Cross tags filtering",
"default": false,
"info": "special mode that automatically hides tags from the filter, which are absent for the current tags selection"
}
],
"blocks": [
    {
    "type": "group",
    "name": "Group of tags",
    "settings": [
    {
    "type": "checkbox",
    "id": "enable",
    "label": "Enable",
    "default": true
    },
    {
    "type": "text",
    "id": "title",
    "label": "Title",
    "info":"for ex. Price, Colors, Size, Brands etc"
    },
    {
    "type": "textarea",
    "id": "tags",
    "label": "Tags",
    "info": "Write product tags, separated by comma. Make sure that the tags are the same as in the products."
    },
    {
    "type": "select",
    "id": "style",
    "label": "Style",
    "options": [
    { "value": "category-list", "label": "List" },
    { "value": "color-list", "label": "Color Pics" },
    { "value": "tags-list", "label": "Tags Pics" }
    ],
    "default": "category-list",
    "info": "If you choose color pics, you need upload in settings\/files pic image, color-tagname.png 27 x 27 px. if you choose Banners pics, you have to upload to settings\/files pic image, color-tagname.png 115 x 115 px."
    },
    {
       "type":      "checkbox",
       "id":        "two_cols",
       "label":     "Apply two columns",
       "default":   false
    },
    {
       "type":      "checkbox",
       "id":        "closed",
       "label":     "Content is closed by default (hide content)",
       "default":   false
    },
    {
       "type":      "checkbox",
       "id":        "merge",
       "label":     "Merge with next Group",
       "default":   false,
       "info":   "only for horizontal sidebar"
    },
    {
        "type": "select",
        "id": "column_width",
        "label": "Column Width",
        "options": [
            { "value": "filter-row-col-12", "label": "1/8" },
            { "value": "filter-row-col-16", "label": "1/6" },
            { "value": "filter-row-col-25", "label": "1/4" },
            { "value": "filter-row-col-33", "label": "1/3" },
            { "value": "filter-row-col-auto", "label": "auto (takes up free space)" }
        ],
        "default": "filter-row-col-25",
        "info": "only for horizontal sidebar"
    }
    ]
    },
    {
    "type":"banner",
    "name":"Banner",
    "settings":[
    {
    "type":"checkbox",
    "id":"enable",
    "label":"Enable",
    "default":true
    },
    {
    "type":"image_picker",
    "id":"image",
    "label":"Image"
    },
    {
    "type":"url",
    "id":"link",
    "label":"Collection link"
    },
    {
    "type":"select",
    "id":"link_target",
    "label":"Link Target",
    "default":"_self",
    "options":[
    {
    "value":"_blank",
    "label":"New page"
    },
    {
    "value":"_self",
    "label":"In current page"
    }
    ]
    },
{
"type": "checkbox",
"id": "link_all_banner",
"label": "Make entire banner a link",
"default":false
},
    {
    "type": "select",
    "id": "bnr_text_pos",
    "options": [
    { "value": "bnr--top bnr--left", "label": "Top/Left"},
    { "value": "bnr--top bnr--right", "label": "Top/Right"},
    { "value": "bnr--top bnr--center", "label": "Top/Center"},
    { "value": "bnr--bottom bnr--left", "label": "Bottom/Left"},
    { "value": "bnr--bottom bnr--right", "label": "Bottom/Right"},
    { "value": "bnr--bottom bnr--center", "label": "Bottom/Center"},
    { "value": "bnr--middle bnr--left", "label": "Middle/Left"},
    { "value": "bnr--middle bnr--right", "label": "Middle/Right"},
    { "value": "bnr--middle bnr--center", "label": "Middle/Center"}
    ],
    "label": "Text Position (Vertical/Horizontal)",
    "default":"bnr--middle bnr--center"
    },
    {
    "type":"range",
    "id":"bnr_text_paddingh",
    "min":1,
    "max":80,
    "step":1,
    "label":"Text Offset Horizontal",
    "unit":"%",
    "default":4
    },
    {
    "type":"range",
    "id":"bnr_text_paddingv",
    "min":1,
    "max":80,
    "step":1,
    "label":"Text Offset Vertical",
    "unit":"%",
    "default":4
    },
{
"type":"color",
"id":"caption_bgcolor",
"label":"Background Color"
},
{
"type":"range",
"id":"caption_bgcolor_opacity",
"min":0.1,
"max":1,
"step":0.1,
"label":"Background Color Opacity",
"unit":"%",
"default": 1
},
{
"type":"range",
"id":"caption_paddingh",
"min":0,
"max":30,
"step":1,
"label":"Caption Padding Horizontal",
"unit":"%",
"default":0
},
{
"type":"range",
"id":"caption_paddingv",
"min":0,
"max":30,
"step":1,
"label":"Caption Padding Vertical",
"unit":"%",
"default":0
},
{
"type":      "range",
"id":        "captions_width",
"min":       30,
"max":        100,
"step":       1,
"unit":       "%",
"label":     "Сaptions width",
"default":   100
},
    {
    "type":"select",
    "id":"hover",
    "label":"Hover Effect",
    "options":[
    {"value":"none","label":"None"},
    {"value":"image-hover-dark-circle","label":"Circle Darkness"},
    {"value":"image-hover-dark","label":"Full Darkness"},
    {"value":"image-hover-scale","label":"Scale"},
    {"value":"image-hover-dark-scale","label":"Scale + Full Darkness"}
    ],
    "default":"image-hover-scale"
    },
    {
    "type":"checkbox",
    "id":"zoom_decor",
    "label":"Zoom Decor Circle",
    "default":false
    },
    {
    "type": "paragraph",
    "content": "…………………………………………………………"
    },
    {
    "type":"header",
    "content":"TEXT 1"
    },
    {
    "type": "checkbox",
    "id": "bnr_text",
    "default": true,
    "label": "Enable"
    },
    {
    "type":"select",
    "id":"bnr_text_order",
    "label":"Order",
    "options":[
    {"value":"1","label":"1"},
    {"value":"2","label":"2"},
    {"value":"3","label":"3"}
    ],
    "default":"1"
    },
    {
    "type":"select",
    "id":"bnr_text_top",
    "label":"Top Margin",
    "options":[
        {
        "value": "mt-0",
        "label": "None"
        },
        {
        "value": "mt-xs",
        "label": "XSmall"
        },
        {
        "value": "mt-sm",
        "label": "Small"
        },
        {
        "value": "mt-lg",
        "label": "Medium"
        },
        {
        "value": "mt-xl",
        "label": "Large"
        },
        {
        "value": "mt-xxl",
        "label": "XLarge"
        }
    ],
    "default":"mt-sm"
    },
    {
    "type":"text",
    "id":"bnr_text_text",
    "label":"Text",
    "default":"Text 1"
    },
{
"type": "checkbox",
"id": "bnr_text_font",
"label": "Use Headings Font",
"default": false
},
    {
    "type":"color",
    "id":"bnr_text_color",
    "label":"Color"
    },
    {
    "type": "checkbox",
    "id": "bnr_text_color_theme",
    "default": false,
    "label": "Use Theme Color"
    },
    {
    "type":"color",
    "id":"bnr_text_bgcolor",
    "label":"Background Color"
    },
    {
    "type":"range",
    "id":"bnr_text_bgcolor_opacity",
    "min":0.1,
    "max":1,
    "step":0.1,
    "label":"Background Color Opacity",
    "unit":"%",
    "default": 0.5
    },
    {
    "type":"select",
    "id": "bnr_text_fontweight",
    "label": "Font Weight",
    "options": [
    { "value": "100", "label": "Thin" },
    { "value": "300", "label": "Light" },
    { "value": "400", "label": "Regular" },
{ "value": "500", "label": "Medium" },
{ "value": "600", "label": "Semibold" },
    { "value": "700", "label": "Bold" },
    { "value": "800", "label": "Black" }
    ],
    "default":"700"
    },
    {
    "type":"range",
    "id":"bnr_text_size",
    "min":10,
    "max":200,
    "step":2.5,
    "label":"Font Size",
    "unit":"%",
    "default": 60
    },
    {
    "type":"range",
    "id":"bnr_text_lineheight",
    "min":1,
    "max":2,
    "step":0.1,
    "label":"Line Height",
    "unit":"em",
    "default":1
    },
    {
    "type": "select",
    "id": "bnr_text_alignment",
    "label": "Self alignment",
    "default": "inherit",
    "options": [
    { "value": "inherit", "label": "Default" },
    { "value": "text-center", "label": "Center" },
    { "value": "text-left", "label": "Left" },
    { "value": "text-right", "label": "Right" }
    ]
    },
    {
    "type": "paragraph",
    "content": "*Set padding if background color is used"
    },
    {
    "type":"range",
    "id":"bnr_text1_paddingh",
    "min":0,
    "max":30,
    "step":1,
    "label":"Text Inside Padding Horizontal",
    "unit":"%",
    "default":0
    },
    {
    "type":"range",
    "id":"bnr_text1_paddingv",
    "min":0,
    "max":30,
    "step":1,
    "label":"Text Inside Padding Vertical",
    "unit":"%",
    "default":0
    },
    {
    "type": "paragraph",
    "content": "…………………………………………………………"
    },
    {
    "type":"header",
    "content":"TEXT 2"
    },
    {
    "type": "checkbox",
    "id": "bnr_text2",
    "default": false,
    "label": "Enable"
    },
    {
    "type":"select",
    "id":"bnr_text2_order",
    "label":"Order",
    "options":[
    {"value":"1","label":"1"},
    {"value":"2","label":"2"},
    {"value":"3","label":"3"}
    ],
    "default":"2"
    },
    {
    "type":"select",
    "id":"bnr_text2_top",
    "label":"Top Margin",
    "options":[
    {"value":"mt-0","label":"None"},
    {"value":"mt-sm","label":"Small"},
    {"value":"mt-lg","label":"Large"}
    ],
    "default":"mt-sm"
    },
    {
    "type":"text",
    "id":"bnr_text2_text",
    "label":"Text",
    "default":"Text 2"
    },
{
"type": "checkbox",
"id": "bnr_text2_font",
"label": "Use Headings Font",
"default": false
},
    {
    "type":"color",
    "id":"bnr_text2_color",
    "label":"Color"
    },
    {
    "type": "checkbox",
    "id": "bnr_text2_color_theme",
    "default": false,
    "label": "Use Theme Color"
    },
    {
    "type":"color",
    "id":"bnr_text2_bgcolor",
    "label":"Background Color"
    },
    {
    "type":"range",
    "id":"bnr_text2_bgcolor_opacity",
    "min":0.1,
    "max":1,
    "step":0.1,
    "label":"Background Color Opacity",
    "unit":"%",
    "default": 0.5
    },
    {
    "type":"select",
    "id": "bnr_text2_fontweight",
    "label": "Font Weight",
    "options": [
    { "value": "100", "label": "Thin" },
    { "value": "300", "label": "Light" },
    { "value": "400", "label": "Regular" },
{ "value": "500", "label": "Medium" },
{ "value": "600", "label": "Semibold" },
    { "value": "700", "label": "Bold" },
    { "value": "800", "label": "Black" }
    ],
    "default":"700"
    },
    {
    "type":"range",
    "id":"bnr_text2_size",
    "min":10,
    "max":200,
    "step":2.5,
    "label":"Font Size",
    "unit":"%",
    "default": 30
    },
    {
    "type":"range",
    "id":"bnr_text2_lineheight",
    "min":1,
    "max":2,
    "step":0.1,
    "label":"Line Height",
    "unit":"em",
    "default":1
    },
    {
    "type": "select",
    "id": "bnr_text2_alignment",
    "label": "Self alignment",
    "default": "inherit",
    "options": [
    { "value": "inherit", "label": "Default" },
    { "value": "text-center", "label": "Center" },
    { "value": "text-left", "label": "Left" },
    { "value": "text-right", "label": "Right" }
    ]
    },
    {
    "type": "paragraph",
    "content": "*Set padding if background color is used"
    },
    {
    "type":"range",
    "id":"bnr_text2_paddingh",
    "min":0,
    "max":30,
    "step":1,
    "label":"Text Inside Padding Horizontal",
    "unit":"%",
    "default":0
    },
    {
    "type":"range",
    "id":"bnr_text2_paddingv",
    "min":0,
    "max":30,
    "step":1,
    "label":"Text Inside Padding Vertical",
    "unit":"%",
    "default":0
    },
    {
    "type": "paragraph",
    "content": "…………………………………………………………"
    },
    {
    "type":"header",
    "content":"BUTTON"
    },
    {
    "type": "checkbox",
    "id": "bnr_button",
    "default": false,
    "label": "Enable"
    },
    {
    "type":"select",
    "id":"bnr_button_order",
    "label":"Order",
    "options":[
    {"value":"1","label":"1"},
    {"value":"2","label":"2"},
    {"value":"3","label":"3"}
    ],
    "default":"3"
    },
    {
    "type":"select",
    "id":"bnr_button_top",
    "label":"Top Margin",
    "options":[
    {"value":"mt-0","label":"None"},
    {"value":"mt-sm","label":"Small"},
    {"value":"mt-lg","label":"Large"}
    ],
    "default":"mt-sm"
    },
    {
    "type": "checkbox",
    "id": "bnr_button_lg",
    "default": false,
    "label": "Large Button"
    },
    {
    "type":"text",
    "id":"bnr_button_text",
    "label":"Text",
    "default":"Buy Now"
    },
{
"type": "select",
"id": "bnr_button_alignment",
"label": "Self alignment",
"default": "inherit",
"options": [
{ "value": "inherit", "label": "Default" },
{ "value": "text-center", "label": "Center" },
{ "value": "text-left", "label": "Left" },
{ "value": "text-right", "label": "Right" }
]
},
{
"type": "checkbox",
"id": "bnr_button_theme",
"default": true,
"label": "Use Theme Button Color"
},
    {
    "type":"color",
    "id": "button_color",
    "label": "Color"
    },
    {
    "type":"color",
    "id": "button_bgcolor",
    "label": "Bg Color"
    },
    {
    "type":"color",
    "id": "button_color_hover",
    "label": "Hover Color"
    },
    {
    "type":"color",
    "id": "button_bgcolor_hover",
    "label": "Hover Bg Color"
    },
    {
    "type": "paragraph",
    "content": "…………………………………………………………"
    },
    {
    "type":"header",
    "content":"LABEL"
    },
    {
    "type": "checkbox",
    "id": "bnr_label",
    "default": false,
    "label": "Enable"
    },
    {
    "type": "select",
    "id": "label_text_pos",
    "options": [
    { "value": "lt", "label": "Top/Left"},
    { "value": "rt", "label": "Top/Right"},
    { "value": "lb", "label": "Bottom/Left"},
    { "value": "rb", "label": "Bottom/Right"}
    ],
    "label": "Label Position",
    "default":"rt"
    },
    {
    "type":"text",
    "id":"label_text",
    "label":"Label Text",
    "default":"This week<br><span>50%</span>"
    },
    {
    "type":"color",
    "id": "label_color",
    "label": "Label Color",
    "default": "#FFFFFF"
    },
    {
    "type": "checkbox",
    "id": "label_color_theme",
    "default": false,
    "label": "Use Theme Color"
    },
    {
    "type":"color",
    "id":"label_bgcolor",
    "label":"Background Color"
    },
    {
    "type":"range",
    "id":"label_bgcolor_opacity",
    "min":0.1,
    "max":1,
    "step":0.1,
    "label":"Background Color Opacity",
    "unit":"%",
    "default": 0.5
    },
    {
    "type":"select",
    "id": "label_fontweight",
    "label": "Label Font Weight",
    "options": [
    { "value": "100", "label": "Thin" },
    { "value": "300", "label": "Light" },
    { "value": "400", "label": "Regular" },
{ "value": "500", "label": "Medium" },
{ "value": "600", "label": "Semibold" },
    { "value": "700", "label": "Bold" },
    { "value": "900", "label": "Black" }
    ],
    "default":"600"
    },
    {
    "type":"range",
    "id":"label_size",
    "min":10,
    "max":40,
    "step":1,
    "label":"Label Font Size",
    "unit":"px",
    "default":21
    },
    {
    "type":"range",
    "id":"label_lineheight",
    "min":1,
    "max":2,
    "step":0.1,
    "label":"Label Line Height",
    "unit":"em",
    "default":1
    },
    {
    "type": "paragraph",
    "content": "*Set padding if background color is used"
    },
    {
    "type":"range",
    "id":"label_paddingh",
    "min":0,
    "max":30,
    "step":1,
    "label":"Text Inside Padding Horizontal",
    "unit":"%",
    "default":0
    },
    {
    "type":"range",
    "id":"label_paddingv",
    "min":0,
    "max":30,
    "step":1,
    "label":"Text Inside Padding Vertical",
    "unit":"%",
    "default":0
    },
    {
    "type": "paragraph",
    "content": "…………………………………………………………"
    },
    {
    "type":"header",
    "content":"Circle Decor 1"
    },
    {
    "type":"select",
    "id":"bnr_decor_1_thickness",
    "label":"Circle Thickness",
    "options":[
    {"value":"1","label":"Thinner"},
    {"value":"3","label":"Thin"},
    {"value":"2","label":"Thick"},
    {"value":"4","label":"Fill"}
    ],
    "default":"1"
    },
    {
    "type": "checkbox",
    "id": "bnr_decor_1",
    "default": false,
    "label": "Enable"
    },
{
"type": "checkbox",
"id": "bnr_decor_1_over",
"default": true,
"label": "Over image"
},
    {
    "type":"select",
    "id":"bnr_decor_1_pos",
    "label":"Corner Position",
    "options":[
    {"value":"circle_decor--tr","label":"Top/Right"},
    {"value":"circle_decor--tl","label":"Top/Left"},
    {"value":"circle_decor--br","label":"Bottom/Right"},
    {"value":"circle_decor--bl","label":"Bottom/Left"}
    ],
    "default":"circle_decor--tr"
    },
    {
    "type":      "range",
    "id":        "bnr_decor_1_xpos",
    "min":       0,
    "max":       100,
    "step":       1,
    "unit":       "%",
    "label":     "Shift X",
    "default":   71
    },
    {
    "type":      "range",
    "id":        "bnr_decor_1_ypos",
    "min":       0,
    "max":        100,
    "step":       1,
    "unit":       "%",
    "label":     "Shift Y",
    "default":   71
    },
    {
    "type":      "range",
    "id":        "bnr_decor_1_rotate",
    "min":        -180,
    "max":        180,
    "step":       5,
    "unit":       "deg",
    "label":     "Rotate",
    "default":   45
    },
    {
    "type":      "range",
    "id":        "bnr_decor_1_width",
    "min":        0,
    "max":        200,
    "step":       5,
    "unit":       "%",
    "label":     "Width",
    "default":   185
    },
    {
    "type":"color",
    "id": "bnr_decor_1_color",
    "label": "Color",
    "default": "#13dcba"
    },
    {
    "type":"select",
    "id":"bnr_decor_1_blend",
    "label":"Blend Mode",
    "options":[
    {"value":"normal","label":"normal"},
    {"value":"darken","label":"darken"},
    {"value":"multiple","label":"multiple"},
    {"value":"soft-light","label":"soft light"}
    ],
    "default":"darken"
    },
    {
    "type":      "range",
    "id":        "bnr_decor_1_opacity",
    "min":        0,
    "max":        100,
    "step":       5,
    "unit":       "%",
    "label":     "Opacity",
    "default":   75
    },
    {
    "type": "paragraph",
    "content": "…………………………………………………………"
    },
    {
    "type":"header",
    "content":"Circle Decor 2"
    },
    {
    "type":"select",
    "id":"bnr_decor_2_thickness",
    "label":"Circle Thickness",
    "options":[
    {"value":"1","label":"Thinner"},
    {"value":"3","label":"Thin"},
    {"value":"2","label":"Thick"},
    {"value":"4","label":"Fill"}
    ],
    "default":"1"
    },
    {
    "type": "checkbox",
    "id": "bnr_decor_2",
    "default": false,
    "label": "Enable"
    },
{
"type": "checkbox",
"id": "bnr_decor_2_over",
"default": true,
"label": "Over image"
},
    {
    "type":"select",
    "id":"bnr_decor_2_pos",
    "label":"Corner Position",
    "options":[
    {"value":"circle_decor--tr","label":"Top/Right"},
    {"value":"circle_decor--tl","label":"Top/Left"},
    {"value":"circle_decor--br","label":"Bottom/Right"},
    {"value":"circle_decor--bl","label":"Bottom/Left"}
    ],
    "default":"circle_decor--tr"
    },
    {
    "type":      "range",
    "id":        "bnr_decor_2_xpos",
    "min":      0,
    "max":        100,
    "step":       1,
    "unit":       "%",
    "label":     "Shift X",
    "default":   71
    },
    {
    "type":      "range",
    "id":        "bnr_decor_2_ypos",
    "min":       0,
    "max":       100,
    "step":       1,
    "unit":       "%",
    "label":     "Shift Y",
    "default":   71
    },
    {
    "type":      "range",
    "id":        "bnr_decor_2_rotate",
    "min":        -180,
    "max":        180,
    "step":       5,
    "unit":       "deg",
    "label":     "Rotate",
    "default":   45
    },
    {
    "type":      "range",
    "id":        "bnr_decor_2_width",
    "min":        0,
    "max":        200,
    "step":       5,
    "unit":       "%",
    "label":     "Width",
    "default":   185
    },
    {
    "type":"color",
    "id": "bnr_decor_2_color",
    "label": "Color",
    "default": "#13dcba"
    },
    {
    "type":"select",
    "id":"bnr_decor_2_blend",
    "label":"Blend Mode",
    "options":[
    {"value":"normal","label":"normal"},
    {"value":"darken","label":"darken"},
    {"value":"multiple","label":"multiple"},
    {"value":"soft-light","label":"soft light"}
    ],
    "default":"darken"
    },
    {
    "type":      "range",
    "id":        "bnr_decor_2_opacity",
    "min":        0,
    "max":        100,
    "step":       5,
    "unit":       "%",
    "label":     "Opacity",
    "default":   75
    }
    ]
    }
]
}
{% endschema %}